name: Composer CI

on:
  workflow_call:
    inputs:
      db_schema:
        required: true
        type: string
      db_archive_schema:
        required: false
        type: string
        default: db_archive
      php_version:
        required: true
        type: string
        default: 7.4
      php_extensions:
        type: string
        required: false
        default: gd zip mcrypt
    secrets:
      REPO_TOKENS:
        required: true
      COMPOSER_AUTH_REPO:
        required: true

jobs:
  Build:
    runs-on: ubuntu-18.04
    services:
      psql:
        image: postgres:12.4-alpine
        env:
          POSTGRES_PASSWORD: testing123
          POSTGRES_DB: jenkins_test
        ports:
          - 5432
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Cache Composer dependencies
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Add HTTP basic auth credentials
        run: echo '${{ inputs.COMPOSER_AUTH_REPO }}' > $GITHUB_WORKSPACE/auth.json

      - name: Composer Install
        uses: php-actions/composer@v6
        with:
          command: install
          php_extensions: ${{inputs.php_extensions}}
          php_version: ${{inputs.php_version}}
        env:
          CI: true

      - name: Set ENV
        run: cp .env.ci .env

      - name: Clear Config
        run: php artisan config:clear

      - name: Create Schema
        run: psql --host 127.0.0.1 --port ${{ job.services.psql.ports['5432'] }} -U postgres -d jenkins_test  -c "CREATE SCHEMA ${{inputs.db_schema}}; GRANT usage on schema courses_prod to postgres; grant create on schema ${{inputs.db_schema}} to postgres;"
        env:
          PGPASSWORD: testing123

      - name: Create Archive DB
        run: psql --host 127.0.0.1 --port ${{ job.services.psql.ports['5432'] }} -U postgres -d jenkins_test  -c "CREATE SCHEMA  ${{inputs.db_archive_schema}}; GRANT usage on schema  ${{inputs.db_archive_schema}} to postgres; grant create on schema ${{inputs.db_archive_schema}} to postgres;"
        env:
          PGPASSWORD: testing123

      - name: Verify Postgres connection from host
        run: psql --host 127.0.0.1 --port ${{ job.services.psql.ports['5432'] }} -U postgres  -d jenkins_test -c "SET search_path TO ${{inputs.db_schema}}"
        env:
          PGPASSWORD: testing123

      - name: Artisan, Passport, and phpunit
        uses: Cybrary/php-generic-action@main
        with:
         command: php artisan cache:clear && php artisan migrate && php artisan db:seed --class=CISeeders && ./vendor/bin/phpunit
         php_extensions: ${{inputs.php_extensions}}
         php_version: ${{inputs.php_version}}
        env:
          CI: true
          DB_PORT: ${{ job.services.psql.ports['5432'] }}
          DB_PASSWORD: testing123
          DB_SCHEMA: "${{inputs.db_schema}}"
          DB_CONNECTION: "pgsql"
          DB_USERNAME: postgres
